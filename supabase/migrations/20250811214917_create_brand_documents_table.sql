-- Enable the pgvector extension
CREATE EXTENSION IF NOT EXISTS vector;

-- Create the brand_documents table
CREATE TABLE public.brand_documents (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  content TEXT,
  embedding VECTOR(1536), -- Assuming OpenAI's text-embedding-ada-002 model
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create indexes for performance
CREATE INDEX ON public.brand_documents (user_id);

-- Set up Row Level Security (RLS)
ALTER TABLE public.brand_documents ENABLE ROW LEVEL SECURITY;

-- Create policies for brand_documents
CREATE POLICY "Users can view their own documents." ON public.brand_documents FOR SELECT USING (auth.uid() = user_id);
CREATE POLICY "Users can insert their own documents." ON public.brand_documents FOR INSERT WITH CHECK (auth.uid() = user_id);
CREATE POLICY "Users can update their own documents." ON public.brand_documents FOR UPDATE USING (auth.uid() = user_id);
CREATE POLICY "Users can delete their own documents." ON public.brand_documents FOR DELETE USING (auth.uid() = user_id);